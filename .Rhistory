#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
empty_columns <- colSums(is.NaN(Card_data_scale) | Card_data_scale == "") == nrow(Card_data_scale)
?is.na
library(dplyr)
library(factoextra)
if (!require("tidyverse")) install.packages("tidyverse")
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
Card_data_scale %>% discard(~all(is.na(.) | . =="NaN"))
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
#fviz_nbclust(Card_data_scale, kmeans, method = "wss")
View(Card_data_scale)
View(Card_data_scale)
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
Test_DF<-Card_data_scale %>% discard(~all(is.na(.) | . =="NaN"))
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
#fviz_nbclust(Card_data_scale, kmeans, method = "wss")
Test_DF
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
Card_data_scale %>% discard(~all(is.na(.) | . =="NaN"))
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
fviz_nbclust(Card_data_scale, kmeans, method = "wss")
View(Card_data_scale)
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
Card_data_scale %>% discard(~all(is.na(.) | . =="nan"))
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
columns_to_remove <- grep('Development.and.analysis', 'PBL/Methods.', 'Design.AV'), names(Card_data_scale))
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
columns_to_remove <- grep('Development.and.analysis', 'PBL/Methods.', 'Design.AV') names(Card_data_scale))
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
columns_to_remove <- grep("Development.and.analysis", names(Card_data_scale))
Card_data_scale[,-columns_to_remove]
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
select(starwars, -'Development.and.analysis')
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
select(starwars, -'NaN')
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
DF_test <- select(starwars, -23)
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
DF_test <- select(Card_data_scale, -'Development.and.analysis')
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
Card_data_scale$Design.AV <- NULL
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
card_data$Design.AV <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Tried to remove three rows with no data in them.(TODO)
#Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
Card_data_scale %>% select(-one_of('Development.and.analysis', 'PBL/Methods.', 'Design.AV'))
View(data)
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Tried to remove three rows with no data in them.(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
#card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
#fviz_nbclust(Card_data_scale, kmeans, method = "wss")
library(dplyr)
library(factoextra)
if (!require("tidyverse")) install.packages("tidyverse")
data <- read.table("CardSortData.csv", header=TRUE, fill = FALSE, sep=",")
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
#(TODO) Will work when empty columns have been removed.
Optimal_amount_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
View(Optimal_amount_of_clusters)
View(Optimal_amount_of_clusters)
View(Optimal_amount_of_clusters)
Optimal_amount_of_clusters
?kmeans
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 8, nstart = 100)
KMC
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 6, nstart = 100)
KMC
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
KMC
View(data)
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
Card_data_scale
#get labels for each card
data.labels = data[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- data[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters and adding the card names(labels) back to the data set
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
fviz_cluster(list(data=Card_data_scale, Cluster=Kmeans.cluster))
library(dplyr)
library(factoextra)
if (!require("tidyverse")) install.packages("tidyverse")
df <- read.table("CardSortData.csv", header=TRUE, fill = FALSE, sep=",")
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters and adding the card names(labels) back to the data set
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
fviz_cluster(list(data=Card_data_scale, Cluster=Kmeans.cluster))
fviz_cluster(list(data=Card_data_scale, Cluster=Kmeans.cluster))
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters and adding the card names(labels) back to the data set
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
fviz_cluster(list(data=Card_data_scale, cluster=Kmeans.cluster))
library(factoextra)
df <- read.table("CardSortData.csv", header=TRUE, fill = FALSE, sep=",")
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters and adding the card names(labels) back to the data set
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
fviz_cluster(list(data=Card_data_scale, cluster=Kmeans.cluster))
library(factoextra)
df <- read.table("CardSortData.csv", header=TRUE, fill = FALSE, sep=",")
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters and adding the card names(labels) back to the data set
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
fviz_cluster(list(data=Card_data_scale, cluster=Kmeans.cluster))
if (!require("factoextra")) install.packages("factoextra")
library(factoextra)
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
if (!require("factoextra")) install.packages("factoextra")
library(factoextra)
df <- read.table("CardSortData.csv", header=TRUE, fill = FALSE, sep=",")
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters and adding the card names(labels) back to the data set
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
fviz_cluster(list(data=Card_data_scale, cluster=Kmeans.cluster))
if (!require("factoextra")) install.packages("factoextra")
library(factoextra)
df <- read.table("CardSortData.csv", header=TRUE, fill = FALSE, sep=",")
#get labels for each card
df.labels = df[1:2]
#table(data.labels)
#Removing the labels from the data
card_data <- df[3:33]
#Figure out a better method for removing columns(TODO)
card_data$Design.AV <- NULL
card_data$PBL.Methods. <- NULL
card_data$Development.and.analysis <- NULL
#scaling the data or normalizing it
Card_data_scale <- scale(card_data)
#Computing the distance. This will be used during the clustering as it compares each data point's distance to a centroid.
card_data <- dist(Card_data_scale)
#principal component analysis, wss = Within Sum squares
Optimal_number_of_clusters<- fviz_nbclust(Card_data_scale, kmeans, method = "wss")
#Kmeans clustering
KMC <-kmeans(Card_data_scale, centers = 9, nstart = 100, iter.max = 100)
#PLotting the Kmeans clusters and adding the card names(labels) back to the data set
Kmeans.cluster <- KMC$cluster
rownames(Card_data_scale) <- data$Card.name
plot <- fviz_cluster(list(data=Card_data_scale, cluster=Kmeans.cluster))
plot
